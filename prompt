prompt_template = PromptTemplate(
    input_variables=["summary"],
    template="""
    Bonds are fixed-income securities that represent a loan made by an investor to a borrower, typically corporate or governmental.
    Coupons are the interest payments made to bondholders, usually paid semi-annually.

    Given the following news summary: {summary}

    Is this news related to bonds or coupons? Answer with 'True' if it is related, otherwise 'False'.
    """
)

bonds_coupons_related = []
for summary in news_df['summary']:
    prompt = prompt_template.format(summary=summary)
    response = llm(prompt).strip()  # 获取 LLM 的判断结果
    bonds_coupons_related.append(response == 'True')

# 将判断结果添加到 DataFrame 中
news_df['bonds_coupons_related'] = bonds_coupons_related

# 步骤 5: 初始化 Pandas DataFrame Agent
agent = create_pandas_dataframe_agent(llm, news_df, verbose=True)

# 步骤 6: 使用 Agent 根据 bonds_coupons_related 列排序并更新 index
query = """
Sort the dataframe by 'bonds_coupons_related' in ascending order, so that False comes first and True comes last.
Then, reset the 'index' column to be a sequential integer starting from 0.
Finally, return the updated dataframe.
"""
str_df = agent.run(query)

try:
    sorted_df = pd.read_csv(io.StringIO(str_df))
except Exception as e:
    print("解析排序结果出错：", e)
    sorted_df = news_df.copy()

# 最后确保 index 字段从 0 开始递增
sorted_df = sorted_df.reset_index(drop=True)
sorted_df['index'] = sorted_df.index

print(sorted_df)
